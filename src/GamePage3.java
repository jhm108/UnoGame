
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author goodday
 */
public class GamePage3 extends javax.swing.JFrame {
    int difficultyLevel;
    boolean AI1played = false;
    boolean EJplayed = false; 
    int turn = 0; 
    boolean winner = false; 
    boolean aI1Uno = false;
    boolean EJUno = false; 
    boolean p1Uno = false; 
    boolean caughtp1Uno = false;
    boolean caughtAI1Uno = false;
    boolean caughtEJUno = false;
    ////
    Deck deck = new Deck();
    Player p1 = new Player();
    PlayerHand AI1 = new PlayerHand();
    PlayerHand EvilJavi = new PlayerHand();
    DiscardPile discardPile = new DiscardPile();
       
    public GamePage3() {
        initComponents();
    }
    
    public GamePage3(int player, String difficulty, String name){
        initComponents();
        
        if(difficulty.equals("Hard")){
            difficultyLevel = 3;
        }else if(difficulty.equals("Regular")){
             difficultyLevel = 2;
        }else{
             difficultyLevel = 1;
        }
        
        
        
        
        deck.load();
        deck.shuffle();
        
        p1.deal(deck);
        AI1.deal(deck);
        EvilJavi.deal(deck);
        discardPile.add(deck.remove());
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + discardPile.getTopCardInfo() + ".png")));
        jLabel1.setText(name);
      
         jLabel17.setText("");
        jLabel16.setText("");
        jLabel20.setText("");
        
        jLabel2.setText("");
        jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
        jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
        jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
        
        //player's hand
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(0) + ".png")));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(1) + ".png")));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(2) + ".png")));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(3) + ".png")));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(4) + ".png")));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(5) + ".png")));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(6) + ".png")));
        
        //play();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("jLabel1");

        jButton1.setText("Say Uno");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Catch Uno");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("user");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel3.setText("jLabel2");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel4.setText("jLabel2");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel5.setText("jLabel2");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel6.setText("jLabel2");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel7.setText("jLabel2");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel8.setText("jLabel2");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel10.setText("jLabel2");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel11.setText("jLabel2");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel12.setText("jLabel2");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel14.setText("jLabel2");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jButton4.setText(">");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Draw Card");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        jLabel13.setText("jLabel13");

        jLabel15.setText("jLabel15");

        jLabel16.setText("jLabel16");

        jLabel17.setText("jLabel17");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jLabel18.setText("jLabel18");

        jLabel19.setText("Evil Javi");

        jLabel20.setText("jLabel20");

        jLabel21.setText("jLabel21");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel17)
                                        .addGap(225, 225, 225)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(419, 419, 419)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(398, 398, 398)
                                .addComponent(jLabel16)
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                                        .addComponent(jLabel20))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jButton6)))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel19))
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(jLabel21))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButton1)
                        .addGap(54, 54, 54)
                        .addComponent(jButton2)
                        .addGap(235, 235, 235)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(143, 143, 143))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(103, 103, 103)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jLabel1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(91, 91, 91))))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Rules");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Restart");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Quit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (p1.hand.size() != 1){
            p1.hand.add(deck.remove());
            p1.hand.add(deck.remove());
            jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
            
        }else if(p1.hand.size() == 1){
            p1Uno = true; 
            jLabel17.setText("Uno!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        dispose(); 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        StartPage r = new StartPage();
        r.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        RulesPage r = new RulesPage();
        r.setVisible(true);
        dispose(); 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        play(0);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //CycleRight
        p1.hand.add(p1.hand.remove(0));
  
        if (p1.hand.size() > 0){
              jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(0) + ".png")));
        }
        if (p1.hand.size() > 1){
             jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(1) + ".png")));
        }
        if (p1.hand.size() > 2){
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(2) + ".png")));
        }
        if (p1.hand.size() > 3){
               jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(3) + ".png")));
        }
        if (p1.hand.size() > 4){
               jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(4) + ".png")));
        }
        if (p1.hand.size() > 5){
             jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(5) + ".png")));
        }
        if (p1.hand.size() > 6){
             jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(6) + ".png")));
        }
        
        jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        play(1);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        play(2);
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        play(3);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        play(4);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        play(5);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        play(6);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
  
        if(deck.size() != 0){
           if(difficultyLevel == 1){
               p1.hand.add(deck.remove());
               checkAdd();
           }else if(difficultyLevel == 2){
               p1.hand.add(deck.remove());
               checkAdd();
               p1.hand.add(deck.remove());
               checkAdd();
           }
           else{
               p1.hand.add(deck.remove());
               checkAdd();
               p1.hand.add(deck.remove());
               checkAdd();
               p1.hand.add(deck.remove());
               checkAdd();
               p1.hand.add(deck.remove());
               checkAdd();
           }
        }
       
        
        
         jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(aI1Uno == false && AI1.hand.size() < 2){
            caughtAI1Uno = true;
            jLabel17.setText("Caught AI Uno!");
            AI1.hand.add(deck.remove());
            AI1.hand.add(deck.remove());
        }
        if(EJUno == false && EvilJavi.hand.size() < 2){
            caughtAI1Uno = true;
            jLabel17.setText("Caught AI Uno!");
            EvilJavi.hand.add(deck.remove());
            EvilJavi.hand.add(deck.remove());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePage2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePage2().setVisible(true);
            }
        });
    }
    
    public void userPlay(int a){
        caughtAI1Uno = false;
        caughtEJUno = false;
        jLabel2.setText("");
        jLabel17.setText("");

        Cards userCard = p1.hand.get(a);
        Cards discardPileCard = discardPile.getTopCardInfo();
 
        if(discardPileCard.getValue() == 10){
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
        }
        else if(discardPileCard.getValue() == 14){
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
        }
        if(userCard.getColor() == discardPileCard.getColor() || userCard.getValue() == discardPileCard.getValue() || userCard.getColor() == 4 ||discardPileCard.getColor() == 4 ){
            discardPile.add(p1.hand.remove(a));
            jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + discardPile.getTopCardInfo() + ".png")));
            checkHand();
        }else{
            System.out.println("Bad card");
            jLabel2.setText("Invalid Card, Two card penalty.");
             p1.hand.add(deck.remove());
             checkAdd();
             p1.hand.add(deck.remove());
             checkAdd();
             
        }
      
          jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
    }
    
    public void AIplay(){
        caughtp1Uno = false;
        Random rand2 = new Random(); 
        int y = rand2.nextInt(100);
        if(y%2==0 && p1Uno == false && p1.hand.size() == 1){
            caughtp1Uno = true;
            jLabel16.setText("Caught user uno!");
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
        }
         
        disableUserCards();
        Cards discardPileCard = discardPile.getTopCardInfo();
        if(discardPileCard.getValue() == 10){
            AI1.hand.add(deck.remove());
            AI1.hand.add(deck.remove());
            jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
        }
        else if(discardPileCard.getValue() == 14){
            AI1.hand.add(deck.remove());
            AI1.hand.add(deck.remove());
            AI1.hand.add(deck.remove());
            AI1.hand.add(deck.remove());
            jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
        }
        Cards AiCard = AI1.play(discardPile.getTopCardInfo());
        if (AiCard.getColor() != 50 ){
                  discardPile.add(AiCard);
                   jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + discardPile.getTopCardInfo() + ".png")));
                   jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
                  jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
        }else{
             AI1.hand.add(deck.remove());
             jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
        }

        if(AI1.hand.size() < 1){
            resultPage r = new resultPage(false);
            r.setVisible(true);
            dispose();
        }else if (AI1.hand.size() < 2){
            Random rand = new Random(); 
            int x = rand.nextInt(100);
            if(x%2 == 0){
                jLabel16.setText("Uno!"); 
                aI1Uno = true;
            }
        }else {
             aI1Uno = false;
             if(caughtp1Uno == false){
                jLabel16.setText("");
             }
        }
        enableUserCards();
        jLabel15.setText(Integer.toString(AI1.hand.size()) + " cards");
    }
    
    public void EvilJaviplay(){
        caughtEJUno = false;
        Random rand2 = new Random(); 
        int y = rand2.nextInt(100);
        if(y%2==0 && p1Uno == false && p1.hand.size() == 1){
            caughtp1Uno = true;
            jLabel20.setText("Caught user uno!");
            p1.hand.add(deck.remove());
            checkAdd();
            p1.hand.add(deck.remove());
            checkAdd();
            jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
        }
         
        disableUserCards();
        Cards discardPileCard = discardPile.getTopCardInfo();
        if(discardPileCard.getValue() == 10){
            EvilJavi.hand.add(deck.remove());
            EvilJavi.hand.add(deck.remove());
            jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
        }
        else if(discardPileCard.getValue() == 14){
            EvilJavi.hand.add(deck.remove());
            EvilJavi.hand.add(deck.remove());
            EvilJavi.hand.add(deck.remove());
            EvilJavi.hand.add(deck.remove());
            jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
        }
        Cards AiCard = EvilJavi.play(discardPile.getTopCardInfo());
        if (AiCard.getColor() != 50 ){
                  discardPile.add(AiCard);
                   jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + discardPile.getTopCardInfo() + ".png")));
                   jLabel13.setText(Integer.toString(p1.hand.size()) + " cards");
                  jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
        }else{
             EvilJavi.hand.add(deck.remove());
             jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
        }

        if(EvilJavi.hand.size() < 1){
            resultPage r = new resultPage(false);
            r.setVisible(true);
            dispose();
        }else if (EvilJavi.hand.size() < 2){
            Random rand = new Random(); 
            int x = rand.nextInt(100);
            if(x%2 == 0){
                jLabel20.setText("Uno!"); 
                EJUno = true;
            }
        }else {
             EJUno = false;
             if(caughtp1Uno == false){
                jLabel20.setText("");
             }
        }
        enableUserCards();
        jLabel21.setText(Integer.toString(EvilJavi.hand.size()) + " cards");
    }
    
    public void checkHand(){
        if (p1.hand.size() < 1){
            resultPage r = new resultPage(true);
            r.setVisible(true);
            dispose();
        }else{
            jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(0) + ".png")));
        }
        
        
        if (p1.hand.size() < 2){
             jLabel3.setVisible(false);
        }
        else{
            jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(1) + ".png")));
        }
        if (p1.hand.size() < 3){
            jLabel14.setVisible(false);
        }
        else{
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(2) + ".png")));
        }
        if (p1.hand.size() < 4){
               jLabel7.setVisible(false);
        }
        else{
            jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(3) + ".png")));
        }
        if (p1.hand.size() <5){
               jLabel6.setVisible(false);
        }
        else{
            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(4) + ".png")));
        }
        if (p1.hand.size() < 6){
             jLabel4.setVisible(false);
        }
        else{
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(5) + ".png")));
        }
        if (p1.hand.size() < 7){
             jLabel8.setVisible(false);
        }
        else{
            jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(6) + ".png")));
        }
    }
    
    public void disableUserCards(){
         jLabel10.setEnabled(false);
        jLabel3.setEnabled(false);
        jLabel14.setEnabled(false);
        jLabel7.setEnabled(false);
        jLabel6.setEnabled(false);
        jLabel4.setEnabled(false);
        jLabel8.setEnabled(false);
    }
    
    public void enableUserCards(){
         jLabel10.setEnabled(true);
        jLabel3.setEnabled(true);
        jLabel14.setEnabled(true);
        jLabel7.setEnabled(true);
        jLabel6.setEnabled(true);
        jLabel4.setEnabled(true);
        jLabel8.setEnabled(true);
    }
    
    public void checkAdd(){
         if(p1.hand.size() > 6){
           jLabel8.setVisible(true);
           jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(6) + ".png")));
        }
        else if(p1.hand.size() > 5){
           jLabel4.setVisible(true);
           jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(5) + ".png")));
        }
        else if(p1.hand.size() > 4){
           jLabel6.setVisible(true);
            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(4) + ".png")));
        }
        else if(p1.hand.size() > 3){
           jLabel7.setVisible(true);
            jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(3) + ".png")));
        }
        else if(p1.hand.size() > 2){
           jLabel14.setVisible(true);
           jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(2) + ".png")));
        }
        else if(p1.hand.size() > 1){
           jLabel3.setVisible(true);
           jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/" + p1.hand.get(1) + ".png")));
        }
    
    }

    
    public void play(int a){
        userPlay(a);
        AIplay();
        EvilJaviplay();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
